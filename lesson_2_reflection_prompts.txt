What happens when you initialize a repository? Why do you need to do it?

	A hidden directory named .git is created. This directory contains the metadata that git needs to operate.
	Running this command is needed so git will be able to track changes and keep versions of the files.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area maintains the list of the files that have to be versioned.
	The repository itself contains all file versions as well as the metadata needeb for it to be maintained by Git.
	The staging area offers the benefit of having some files versioned and other than not.

How can you use the staging area to make sure you have one commit per logical
change?

	The staging area keeps all actual changes until a logical hange is completed. Then, as an incividual change, a commit is made to create a new version.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches are helpful when a new feature, version, translation, etc., is needed but it is not sure if it will be integrated in the "normal" version. It is a way to try important changes without afecting the "normal" history.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
